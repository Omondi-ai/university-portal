{"version":3,"sources":["main.js"],"names":["document","addEventListener","fetch","updateOnlineStatus","response","json","then","data","setInterval","notificationDropdown","getElementById","querySelector","badge","style","display","slice","call","querySelectorAll","map","tooltipTriggerEl","tooltipTriggerList","Tooltip","e","messageInput","fileInput","formData","regeneratorRuntime","async","_context","prev","next","preventDefault","FormData","append","value","files","awrap","window","location","href","method","sent","t0","body","error","stop"],"mappings":"aACAA,SAASC,iBAAiB,mBAAoB,WAA9CD,SAASC,IACLC,MAAA,mCACSC,KAAAA,SAAAA,GAAAA,OAATC,EAA8BC,SACpBC,KAAA,SAAAC,GACgBH,QAASC,IAAb,2BAOtBG,YAAYL,EAAoB,KAGhCA,IAGA,IAAMM,EAAuBT,SAASU,eAAe,wBACjDD,GAAAA,EAAsBR,iBAAA,oBAAA,WACtBQ,MAAAA,sCACUH,KAAA,SAAAF,GAAA,OAAAA,EAAAC,SACgBD,KAAAA,SAAAA,GACZ,IAAAG,EAAQP,SAAAW,cAAA,uBACIX,IAEVY,EAAMC,MAAMC,QAAU,YAOf,GAAGC,MAAMC,KAAKhB,SAASiB,iBAAiB,+BAChDC,IAAI,SAAUC,GAD3BC,OAAAA,IAAAA,UAAqBC,QAASL,OAGnChB,SAFDW,cAAA,iBAAAV,iBAAA,SAAA,SAAAqB,GAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAjCJR,EAAAS,iBAqCSpB,EAAcX,SAAAW,cAAiBV,YAA2BuB,EAAAxB,SAAAW,cAAA,mBAAAc,EAAA,IAAAO,UAAAC,OAAA,OAAAV,EAAAW,OAAAV,EAAAW,MAAA,IAC/Db,EAAES,OAAAA,aAAFP,EAAAW,MAAA,IAEMX,EAAAA,OAHyD,sBAGpCb,SAAcA,cAHsB,8BAAAuB,OAJ/DN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAAAJ,mBAAAU,MAiB2BlC,MAAMmC,OAAOC,SAASC,KAAM,CANvDC,OAAIhB,OACAC,KAAAA,KAZJ,KAAA,GAAAG,EAAAa,KAcSR,KAVsDV,EAAAW,MAAA,GAAAV,EAAAU,MAAA,IAJ/DN,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,MAAA,GAmBQe,QAAIC,MAAEnB,SAANkB,EAAAA,IAnBR,KAAA,GAAA,IAAA,MAAA,OAAAf,EAAAiB,SAAA,KAAA,KAAA,CAAA,CAAA,EAAA","file":"main.min.js","sourcesContent":["// Online status indicator\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Update online status periodically\r\n    function updateOnlineStatus() {\r\n        fetch('/accounts/update_online_status/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Online status updated');\r\n            });\r\n    }\r\n    \r\n    // Update every 5 minutes\r\n    setInterval(updateOnlineStatus, 5 * 60 * 1000);\r\n    \r\n    // Update on page load\r\n    updateOnlineStatus();\r\n    \r\n    // Mark notifications as read when dropdown is shown\r\n    const notificationDropdown = document.getElementById('notificationDropdown');\r\n    if (notificationDropdown) {\r\n        notificationDropdown.addEventListener('shown.bs.dropdown', function() {\r\n            fetch('/accounts/mark_notifications_read/')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const badge = document.querySelector('.notification-badge');\r\n                    if (badge) {\r\n                        badge.style.display = 'none';\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    \r\n    // Initialize tooltips\r\n    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\r\n    tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n        return new bootstrap.Tooltip(tooltipTriggerEl);\r\n    });\r\n});\r\ndocument.querySelector('#message-form').addEventListener('submit', async function(e) {\r\n    e.preventDefault();\r\n    const messageInput = document.querySelector('#id_text');\r\n    const fileInput = document.querySelector('#id_attachment');\r\n    const formData = new FormData();\r\n    \r\n    formData.append('text', messageInput.value);\r\n    if (fileInput.files[0]) {\r\n        formData.append('attachment', fileInput.files[0]);\r\n    }\r\n    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);\r\n    \r\n    try {\r\n        const response = await fetch(window.location.href, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if (response.ok) {\r\n            messageInput.value = '';\r\n            fileInput.value = '';\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n});"]}