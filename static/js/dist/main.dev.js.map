{"version":3,"sources":["main.js"],"names":["document","addEventListener","updateOnlineStatus","fetch","then","response","json","data","console","log","setInterval","notificationDropdown","getElementById","badge","querySelector","style","display","tooltipTriggerList","slice","call","querySelectorAll","map","tooltipTriggerEl","bootstrap","Tooltip","e","preventDefault","messageInput","fileInput","formData","FormData","append","value","files","window","location","href","method","body","ok","error"],"mappings":"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","sourcesContent":["// Online status indicator\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    // Update online status periodically\r\n    function updateOnlineStatus() {\r\n        fetch('/accounts/update_online_status/')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Online status updated');\r\n            });\r\n    }\r\n    \r\n    // Update every 5 minutes\r\n    setInterval(updateOnlineStatus, 5 * 60 * 1000);\r\n    \r\n    // Update on page load\r\n    updateOnlineStatus();\r\n    \r\n    // Mark notifications as read when dropdown is shown\r\n    const notificationDropdown = document.getElementById('notificationDropdown');\r\n    if (notificationDropdown) {\r\n        notificationDropdown.addEventListener('shown.bs.dropdown', function() {\r\n            fetch('/accounts/mark_notifications_read/')\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    const badge = document.querySelector('.notification-badge');\r\n                    if (badge) {\r\n                        badge.style.display = 'none';\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    \r\n    // Initialize tooltips\r\n    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle=\"tooltip\"]'));\r\n    tooltipTriggerList.map(function (tooltipTriggerEl) {\r\n        return new bootstrap.Tooltip(tooltipTriggerEl);\r\n    });\r\n});\r\ndocument.querySelector('#message-form').addEventListener('submit', async function(e) {\r\n    e.preventDefault();\r\n    const messageInput = document.querySelector('#id_text');\r\n    const fileInput = document.querySelector('#id_attachment');\r\n    const formData = new FormData();\r\n    \r\n    formData.append('text', messageInput.value);\r\n    if (fileInput.files[0]) {\r\n        formData.append('attachment', fileInput.files[0]);\r\n    }\r\n    formData.append('csrfmiddlewaretoken', document.querySelector('[name=csrfmiddlewaretoken]').value);\r\n    \r\n    try {\r\n        const response = await fetch(window.location.href, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n        \r\n        if (response.ok) {\r\n            messageInput.value = '';\r\n            fileInput.value = '';\r\n        }\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n    }\r\n});"],"file":"main.dev.js"}